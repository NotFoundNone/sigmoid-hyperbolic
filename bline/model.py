import numpy as np
import matplotlib.pyplot as plt

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏
t = [1, 0, 2, 1, 1, 0]  # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã t0, t1, t2, t3, t4, t5
a = 0.5  # –ö—Ä–∏—Ç–µ—Ä–∏–π –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è

# –ú–æ–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def model_function(x1, x2):
    return t[0] + t[1] * x1 + t[2] * x2 + t[3] * x1 * x2 + t[4] * x1**2 + t[5] * x2**2

# –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É –∑–Ω–∞—á–µ–Ω–∏–π
x1 = np.linspace(-15, 15, 500)
x2 = np.linspace(-15, 15, 500)
x1, x2 = np.meshgrid(x1, x2)

# –í—ã—á–∏—Å–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –∏ –≥—Ä–∞–Ω–∏—Ü—É
decision_boundary = model_function(x1, x2) - a

# –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
plt.figure(figsize=(8, 6))

# –ì—Ä–∞–Ω–∏—Ü–∞ –∫–ª–∞—Å—Å–æ–≤
#–ö—Ä–∞—Å–Ω–∞—è –ª–∏–Ω–∏—è: —ç—Ç–æ –∫—Ä–∏–≤–∞—è, –≥–¥–µ ùë¶ = 0.5. –û–Ω–∞ —Ä–∞–∑–¥–µ–ª—è–µ—Ç –∫–ª–∞—Å—Å—ã.
plt.contour(x1, x2, decision_boundary, levels=[0], colors='black', linewidths=2)

# –û–±–ª–∞—Å—Ç–∏ –∫–ª–∞—Å—Å–æ–≤

#–æ–±–ª–∞—Å—Ç—å 0
#–ì–æ–ª—É–±–∞—è –æ–±–ª–∞—Å—Ç—å: –∫–ª–∞—Å—Å 0 (ùë¶ < 0.5).
plt.contourf(x1, x2, decision_boundary, levels=[-np.inf, 0], colors=['lightblue'], alpha=0.6)

#–æ–±–ª–∞—Å—Ç—å 1
#–ó–µ–ª–µ–Ω–∞—è –æ–±–ª–∞—Å—Ç—å: –∫–ª–∞—Å—Å 1 (ùë¶ >= 0.5).
plt.contourf(x1, x2, decision_boundary, levels=[0, np.inf], colors=['lightgreen'], alpha=0.6)

# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
plt.title("Decision Boundary and Class Regions")
plt.xlabel("x1")
plt.ylabel("x2")
plt.axhline(0, color='black', linestyle='--', linewidth=0.8)  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –æ—Å—å
plt.axvline(0, color='black', linestyle='--', linewidth=0.8)  # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –æ—Å—å
plt.grid()
plt.show()
